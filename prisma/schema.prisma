
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @default(autoincrement()) @id
  username      String?
  email         String?   @unique
  password      String?
  eventTypes    EventType[]          @relation("user_eventtype")
  bookings      Booking[]
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
}

model Attendee {
  id            Int      @id @default(autoincrement())
  email         String
  name          String
  timeZone      String
  booking       Booking? @relation(fields: [bookingId], references: [id])
  bookingId     Int?
}

model EventType {
  id             Int                    @id @default(autoincrement())
  title          String
  slug           String
  description    String?
  length         Int
  users          User[]                 @relation("user_eventtype")
  userId         Int?
  bookings       Booking[]
  eventName      String?
  timeZone       String?
  @@unique([userId, slug])
}

model Booking {
  id                  Int                  @id @default(autoincrement())
  uid                 String               @unique
  user                User?                @relation(fields: [userId], references: [id])
  userId              Int?
  eventType           EventType?           @relation(fields: [eventTypeId], references: [id])
  eventTypeId         Int?
  title               String
  description         String?
  startTime           DateTime
  endTime             DateTime
  attendees           Attendee[]
  createdAt           DateTime             @default(now())
  updatedAt           DateTime?
  status              BookingStatus        @default(ACCEPTED)
}

enum BookingStatus {
  CANCELLED  @map("cancelled")
  ACCEPTED   @map("accepted")
  REJECTED   @map("rejected")
  PENDING    @map("pending")
}
